package wtf.nebula.client.impl.module.exploits;

import me.bush.eventbus.annotation.EventListener;
import net.minecraft.block.Block;
import net.minecraft.client.gui.inventory.GuiChest;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0DPacketCloseWindow;
import net.minecraft.network.play.server.S2EPacketCloseWindow;
import wtf.nebula.client.api.property.Property;
import wtf.nebula.client.impl.event.base.Era;
import wtf.nebula.client.impl.event.impl.client.EventTick;
import wtf.nebula.client.impl.event.impl.network.EventPacket;
import wtf.nebula.client.impl.event.impl.render.EventOpenGUI;
import wtf.nebula.client.impl.event.impl.world.EventRightClickBlock;
import wtf.nebula.client.impl.module.ModuleCategory;
import wtf.nebula.client.impl.module.ToggleableModule;
import wtf.nebula.client.utils.world.WorldUtils;

public class ChestBackpack extends ToggleableModule {

    private final Property<Boolean> silent = new Property<>(false, "Silent", "silentopen");

    private GuiChest inv;
    private int windowId = -1;
    private boolean closeGui = false;

    public ChestBackpack() {
        super("Chest Backpack", new String[]{"chestbackpack", "echestbp", "backpack"}, ModuleCategory.EXPLOITS);
        offerProperties(silent);
    }

    @Override
    protected void onDisable() {
        super.onDisable();

        if (!isNull() && inv != null) {
            mc.displayGuiScreen(inv);
        }

        inv = null;
        windowId = -1;
        closeGui = false;
    }

    @EventListener
    public void onTick(EventTick event) {
        if (inv != null && mc.thePlayer.openContainer.windowId != 0) {
            windowId = mc.thePlayer.openContainer.windowId;

            if (closeGui && mc.currentScreen instanceof GuiChest) {
                mc.displayGuiScreen(null);
                closeGui = false;
            }
        }
    }

    @EventListener
    public void onOpenGUI(EventOpenGUI event) {
        if (event.getOpened() instanceof GuiChest) {
            windowId = ((GuiChest) event.getOpened()).container.windowId;
            inv = (GuiChest) event.getOpened();
        }
    }

    @EventListener
    public void onRightClickBlock(EventRightClickBlock event) {
        if (!silent.getValue()) {
            return;
        }

        int x = event.getX();
        int y = event.getY();
        int z = event.getZ();

        Block block = WorldUtils.getBlock(x, y, z);
        if (block.equals(Blocks.chest) || block.equals(Blocks.trapped_chest) || block.equals(Blocks.ender_chest)) {
            event.setCancelled(true);
            closeGui = true;

            float hitX = (float) (event.getHitVec().xCoord - (double) x);
            float hitY = (float) (event.getHitVec().yCoord - (double) y);
            float hitZ = (float) (event.getHitVec().zCoord - (double) z);

            mc.thePlayer.sendQueue.addToSendQueue(new C08PacketPlayerBlockPlacement(x, y, z, event.getFacing(), event.getStack(), hitX, hitY, hitZ));
            mc.thePlayer.swingItemSilent();
        }
    }

    @EventListener
    public void onPacket(EventPacket event) {
        if (event.getEra().equals(Era.PRE)) {
            if (event.getPacket() instanceof C0DPacketCloseWindow) {
                if (inv != null && windowId != -1) {
                    event.setCancelled(true);
                }
            } else if (event.getPacket() instanceof S2EPacketCloseWindow) {
                S2EPacketCloseWindow packet = event.getPacket();
                if (packet.field_148896_a == windowId && inv != null) {

                    inv = null;
                    windowId = -1;
                    setRunning(false);
                }
            }
        }
    }
}

package wtf.nebula.client.impl.module.exploits;

import com.google.common.collect.Lists;
import me.bush.eventbus.annotation.EventListener;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.potion.Potion;
import wtf.nebula.client.impl.event.impl.client.EventTick;
import wtf.nebula.client.impl.event.impl.network.EventPacket;
import wtf.nebula.client.impl.event.impl.player.EventDeincrementPotionDuration;
import wtf.nebula.client.impl.module.ModuleCategory;
import wtf.nebula.client.impl.module.ToggleableModule;
import wtf.nebula.client.utils.player.MoveUtils;

import java.util.List;

public class PotionSaver extends ToggleableModule {
    public static final List<Potion> VALID_POTIONS = Lists.newArrayList(
            Potion.fireResistance, Potion.heal, Potion.moveSpeed,
            Potion.digSpeed, Potion.invisibility, Potion.damageBoost, Potion.regeneration,
            Potion.resistance, Potion.waterBreathing, Potion.nightVision, Potion.jump, Potion.field_76444_x
    );

    private boolean cancelPackets = false;
    private boolean allowCancel = false;

    public PotionSaver() {
        super("Potion Saver", new String[]{"potionsaver"}, ModuleCategory.EXPLOITS);
    }

    @Override
    protected void onDisable() {
        super.onDisable();
        cancelPackets = false;
        allowCancel = false;
    }

    @EventListener
    public void onTick(EventTick event) {

        for (Potion potion : VALID_POTIONS) {
            if (mc.thePlayer.isPotionActive(potion)) {
                cancelPackets = true;
                return;
            }
        }

        cancelPackets = false;
    }

    @EventListener
    public void onDeincrementPotionDuration(EventDeincrementPotionDuration event) {
        if (shouldCancel() && allowCancel) {
            for (Potion potion : VALID_POTIONS) {
                if (potion.id == event.getPotionEffect().getPotionID()) {
                    event.setCancelled(true);

                }
            }
        }
    }

    @EventListener
    public void onPacket(EventPacket event) {
        if (isNull()) {
            return;
        }

        if (event.getPacket() instanceof C03PacketPlayer && cancelPackets) {

            C03PacketPlayer packet = event.getPacket();

            if (!packet.rotating && shouldCancel()) {
                event.setCancelled(true);
                allowCancel = true;
            } else {
                allowCancel = false;
            }

        }
    }

    private boolean shouldCancel() {
        return !MoveUtils.isMoving() && !mc.gameSettings.keyBindJump.pressed && !mc.thePlayer.isUsingItem();
    }

}

package wtf.nebula.client.impl.module.exploits;

import me.bush.eventbus.annotation.EventListener;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.potion.Potion;
import wtf.nebula.client.api.property.Property;
import wtf.nebula.client.impl.event.impl.client.EventTick;
import wtf.nebula.client.impl.module.ModuleCategory;
import wtf.nebula.client.impl.module.ToggleableModule;

public class Zoot extends ToggleableModule {
    private final Property<Boolean> potions = new Property<>(true, "Potions", "pots");
    private final Property<Boolean> fire = new Property<>(false, "Fire", "burn", "burning");

    private final Property<Boolean> weakness = new Property<>(true, "Weakness")
            .setVisibility(potions::getValue);
    private final Property<Boolean> blindness = new Property<>(true, "Blindness")
            .setVisibility(potions::getValue);
    private final Property<Boolean> slowness = new Property<>(true, "Slowness")
            .setVisibility(potions::getValue);
    private final Property<Boolean> nausea = new Property<>(true, "Nausea")
            .setVisibility(potions::getValue);

    public Zoot() {
        super("Zoot", new String[]{"potionremover", "antipotion"}, ModuleCategory.EXPLOITS);
        offerProperties(potions, fire, weakness, blindness, slowness, nausea);
    }

    @EventListener
    public void onTick(EventTick event) {

        if (potions.getValue()) {
            if (weakness.getValue() && mc.thePlayer.isPotionActive(Potion.weakness)) {
                mc.thePlayer.removePotionEffect(Potion.weakness.id);
            }

            if (blindness.getValue() && mc.thePlayer.isPotionActive(Potion.blindness)) {
                mc.thePlayer.removePotionEffect(Potion.blindness.id);
            }

            if (slowness.getValue() && mc.thePlayer.isPotionActive(Potion.moveSlowdown)) {
                mc.thePlayer.removePotionEffect(Potion.moveSlowdown.id);
            }

            if (nausea.getValue() && mc.thePlayer.isPotionActive(Potion.confusion)) {
                mc.thePlayer.removePotionEffect(Potion.confusion.id);
            }
        }

        if (fire.getValue()) {

            if (!mc.thePlayer.isBurning()) {
                return;
            }

            int count = mc.thePlayer.fire - 1;
            if (count <= 0) {
                count = 20;
            }

            for (int i = 0; i < count; ++i) {
                mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer());
            }
        }
    }
}

package wtf.nebula.client.impl.module.exploits;

import me.bush.eventbus.annotation.EventListener;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C03PacketPlayer;
import wtf.nebula.client.api.property.Property;
import wtf.nebula.client.impl.event.impl.client.EventTick;
import wtf.nebula.client.impl.module.ModuleCategory;
import wtf.nebula.client.impl.module.ToggleableModule;

public class FastEat extends ToggleableModule {
    private final Property<Mode> mode = new Property<>(Mode.PACKET, "Mode", "m", "type");
    private final Property<Integer> ticks = new Property<>(3, 0, 20, "Ticks", "wait");

    private final Property<Integer> packets = new Property<>(20, 10, 500, "Packets", "pks")
            .setVisibility(() -> mode.getValue().equals(Mode.PACKET));
    private final Property<Float> timerSpeed = new Property<>(1.2f, 1.1f, 5.0f, "Timer Speed", "timerspeed", "timer")
            .setVisibility(() -> mode.getValue().equals(Mode.TIMER));

    private boolean usedTimer = false;

    public FastEat() {
        super("Fast Eat", new String[]{"fasteat", "packeteat"}, ModuleCategory.EXPLOITS);
        offerProperties(mode, ticks, packets, timerSpeed);
    }

    @Override
    protected void onDisable() {
        super.onDisable();

        if (usedTimer && !isNull()) {
            mc.timer.timerSpeed = 1.0f;
        }

        usedTimer = false;
    }

    @EventListener
    public void onTick(EventTick event) {
        ItemStack activeStack = mc.thePlayer.getItemInUse();
        if (activeStack != null && activeStack.getItem() instanceof ItemFood) {
            int count = mc.thePlayer.getItemInUseDuration();
            if (count >= ticks.getValue()) {

                if (mode.getValue().equals(Mode.PACKET)) {
                    for (int i = 0; i < packets.getValue(); ++i) {
                        mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer());
                    }
                } else if (mode.getValue().equals(Mode.TIMER)) {
                    usedTimer = true;
                    mc.timer.timerSpeed = timerSpeed.getValue();
                }
            } else {
                if (usedTimer) {
                    mc.timer.timerSpeed = 1.0f;
                }
            }
        } else {
            if (usedTimer) {
                mc.timer.timerSpeed = 1.0f;
            }
        }
    }

    public enum Mode {
        PACKET, TIMER
    }
}

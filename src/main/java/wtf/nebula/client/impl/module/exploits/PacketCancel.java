package wtf.nebula.client.impl.module.exploits;

import me.bush.eventbus.annotation.EventListener;
import net.minecraft.network.play.client.C0CPacketInput;
import wtf.nebula.client.api.config.Config;
import wtf.nebula.client.impl.event.impl.network.EventPacket;
import wtf.nebula.client.impl.module.ModuleCategory;
import wtf.nebula.client.impl.module.ToggleableModule;
import wtf.nebula.client.utils.io.FileUtils;

import java.util.HashSet;
import java.util.Set;

public class PacketCancel extends ToggleableModule {
    public static final Set<Class<?>> CANCELABLE = new HashSet<>();

    public PacketCancel() {
        super("Packet Cancel", new String[]{"packetcanceller", "packetcancel", "antipackets"}, ModuleCategory.EXPLOITS);

        new Config("packet_canceller.txt") {

            @Override
            public void load(String element) {
                if (element == null || element.isEmpty()) {
                    CANCELABLE.add(C0CPacketInput.class);
                    return;
                }

                for (String name : element.split("\n")) {

                    name = name.trim().replaceAll("\\s*", "");
                    if (name.isEmpty()) {
                        continue;
                    }

                    try {
                        Class<?> clazz = Class.forName("net.minecraft.network.play.client." + name);
                        CANCELABLE.add(clazz);
                    } catch (Exception ignored) {

                    }

                    try {
                        Class<?> clazz = Class.forName("net.minecraft.network.play.server." + name);
                        CANCELABLE.add(clazz);
                    } catch (Exception ignored) {

                    }
                }
            }

            @Override
            public void save() {
                StringBuilder builder = new StringBuilder();
                for (Class<?> clazz : CANCELABLE) {

                    String name = clazz.getSimpleName();
                    builder.append(name).append("\n");
                }

                FileUtils.write(getFile(), builder.toString());
            }
        };
    }

    @EventListener
    public void onPacket(EventPacket event) {
        if (CANCELABLE.stream().anyMatch((clazz) -> clazz.isInstance(event.getPacket()))) {
            event.setCancelled(true);
        }
    }
}

package lol.nebula.module.exploit;

import lol.nebula.listener.bus.Listener;
import lol.nebula.listener.events.net.EventPacket;
import lol.nebula.module.Module;
import lol.nebula.module.ModuleCategory;
import lol.nebula.setting.Setting;
import lol.nebula.util.math.timing.Timer;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

import static java.lang.String.format;

/**
 * @author aesthetical
 * @since 05/06/23
 */
public class AntiStuck extends Module {
    private final Setting<Double> time = new Setting<>(2.0, 0.1, 0.5, 10.0, "Time");
    private final Setting<Double> freezeTime = new Setting<>(1.5, 0.1, 0.5, 10.0, "Freeze Time");

    private final Setting<Integer> lagbacks = new Setting<>(5, 2, 10, "Lagbacks");

    private final Timer freezeTimer = new Timer();
    private final Timer cancelTimer = new Timer();

    private boolean freezing;
    private int buffer;

    public AntiStuck() {
        super("Anti Stuck", "Prevents NCP from chain lagging you back", ModuleCategory.EXPLOIT);
    }

    @Override
    public void onDisable() {
        super.onDisable();
        buffer = 0;
        freezing = false;
    }

    @Listener
    public void onPacketOutbound(EventPacket.Outbound event) {
        if (event.getPacket() instanceof C03PacketPlayer) {
            if (buffer >= lagbacks.getValue()) {

                if (!freezing) {
                    cancelTimer.resetTime();
                    freezing = true;
                    print(format("Lagged back %s time(s) in %.1f seconds",
                            buffer,
                            freezeTimer.getTimeElapsedMS() / 1000.0));
                }

            }

            if (freezing) {
                event.cancel();

                if (!cancelTimer.ms((long) (freezeTime.getValue() * 1000.0), false)) return;

                freezing = false;
                buffer = 0;
                freezeTimer.resetTime();

                print("Released frozen C03s");
            }
        }
    }

    @Listener
    public void onPacketInbound(EventPacket.Inbound event) {
        if (mc.thePlayer == null || mc.thePlayer.ticksExisted < 3) return;

        if (event.getPacket() instanceof S08PacketPlayerPosLook) {
            if (freezeTimer.ms((long) (time.getValue() * 1000.0), true)) {
                freezing = false;
                buffer = 0;
            }

            ++buffer;
        }
    }
}
